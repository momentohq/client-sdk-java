/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package momento.sdk;

import java.nio.ByteBuffer;
import java.nio.charset.StandardCharsets;
import momento.sdk.messages.ClientGetResponse;
import momento.sdk.messages.ClientSetResponse;
import momento.sdk.messages.MomentoCacheResult;
import org.junit.jupiter.api.Assertions;

class MomentoTest {
  //  Cache cache;

  //  @org.junit.jupiter.api.BeforeAll
  static void beforeAll() {
    if (System.getenv("TEST_AUTH_TOKEN") == null) {
      throw new IllegalArgumentException(
          "Integration tests require TEST_AUTH_TOKEN env var; see README for more details.");
    }
    if (System.getenv("TEST_CACHE_NAME") == null) {
      throw new IllegalArgumentException(
          "Integration tests require TEST_CACHE_NAME env var; see README for more details.");
    }
  }

  @org.junit.jupiter.api.Test
  void testHappyPath() {
    try {
      Momento m = Momento.init(System.getenv("TEST_AUTH_TOKEN"));
      Cache cache = m.createCache(System.getenv("TEST_CACHE_NAME"));

      String key = java.util.UUID.randomUUID().toString();

      // Set Key sync
      ClientSetResponse setRsp =
          cache.set(key, ByteBuffer.wrap("bar".getBytes(StandardCharsets.UTF_8)), 2);
      Assertions.assertEquals(MomentoCacheResult.Ok, setRsp.getResult());

      // Get Key that was just set
      ClientGetResponse<ByteBuffer> rsp = cache.get(key);

      Assertions.assertEquals(MomentoCacheResult.Hit, rsp.getResult());
      Assertions.assertEquals("bar", StandardCharsets.US_ASCII.decode(rsp.getBody()).toString());

    } catch (java.io.IOException e) {
      Assertions.fail(e);
    }
  }
}
